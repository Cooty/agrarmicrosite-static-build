@use "sass:map";
@use "variables" as v;

.ag {
  $lte-lg-opener-width: 40px;
  $burger-line-height: 4px;
  $burger-line-gutter: 10px;
  $lte-lg-menu-width: 228px;

  &-header {
    $bg-height: 12px;
    padding: 0 0 calc(var(--wrapper-gutter) + #{$bg-height}) 0;
    background: url("../assets/header-line.png") repeat-x left bottom;
  }

  &-logo-row {
    padding-top: var(--wrapper-gutter);

    @media screen and (min-width: #{map.get(v.$breakpoints, "lg")}) {
      padding-bottom: var(--wrapper-gutter);
    }
  }

  &-logo {
    display: block;
    width: 210px;

    @media screen and (min-width: #{map.get(v.$breakpoints, "sm")}) {
      width: v.$logo-width;
    }
  }

  &-nav {
    position: fixed;
    z-index: v.$z-top;
    width: $lte-lg-menu-width;
    background: v.$color-bg;
    left: 0;
    top: 0;
    bottom: 0;
    transform: translate3d(-$lte-lg-menu-width, 0, 0);
    opacity: 0;
    transition: all v.$default-transition;

    .ag-lte-lg-nav-opened & {
      @media screen and (max-width: (map.get(v.$breakpoints, "lg") - 1)) {
        transform: translate3d(0, 0, 0);
        opacity: 1;
      }
    }

    @media screen and (min-width: map.get(v.$breakpoints, "lg")) {
      transform: translate3d(0, 0, 0);
      opacity: 1;
      position: relative;
      top: auto;
      left: auto;
      width: 100%;
      z-index: auto;
    }

    &:after {
      content: "";
      position: absolute;
      width: 6px;
      height: 100%;
      right: -3px;
      top: 0;
      display: block;
      background: url("../assets/menu-mobile-line.png") repeat-y;

      @media screen and (min-width: map.get(v.$breakpoints, "lg")) {
        display: none;
      }
    }
  }

  &-nav-list {
    position: absolute;
    top: calc(var(--wrapper-gutter) * 2);
    right: var(--wrapper-gutter);
    bottom: var(--wrapper-gutter);
    left: var(--wrapper-gutter);
    overflow-y: auto;

    @media screen and (min-width: map.get(v.$breakpoints, "lg")) {
      position: relative;
      top: auto;
      right: auto;
      bottom: auto;
      left: auto;
      overflow: visible;
      display: flex;
      flex-wrap: nowrap;
      justify-content: space-between;
    }
  }

  &-nav-item {
    margin-bottom: 1rem;
    font-family: v.$font-headline;

    &:last-of-type {
      margin-bottom: 0;
    }

    @media screen and (min-width: map.get(v.$breakpoints, "lg")) {
      margin-bottom: 0;
    }
  }

  &-nav-link {
    color: v.$color-text;
    transition: all v.$default-transition;

    @media screen and (min-width: map.get(v.$breakpoints, "lg")) {
      font-size: v.$content-text-size-large;
      line-height: v.$content-text-size-large;
      white-space: nowrap;
    }

    &:hover,
    &:focus {
      color: v.$color-brand;
    }
  }

  &-backdrop {
    position: fixed;
    z-index: v.$z-middle;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(v.$color-brand, 0.7);

    @media screen and (min-width: map.get(v.$breakpoints, "lg")) {
      display: none !important;
    }
  }

  &-menu-button-lte-lg {
    position: absolute;
    width: $lte-lg-opener-width;
    height: $lte-lg-opener-width;
    right: var(--wrapper-gutter);
    top: 4px;
    border: none;
    background: none;
    color: v.$color-text;
    padding: 0;

    @media screen and (min-width: map.get(v.$breakpoints, "md")) {
      top: 24px;
    }

    @media screen and (min-width: map.get(v.$breakpoints, "lg")) {
      display: none;
    }

    > span {
      display: block;
      height: $burger-line-height;
      background: url("../assets/footer-line.png") repeat-x center;
      background-size: 360px 4px;
      position: absolute;
      left: 4px;
      right: 4px;
      transition: all v.$default-transition;
      transform-origin: center center;

      .ag-lte-lg-nav-opened & {
        z-index: v.$z-middle + 1;
      }

      &:first-of-type {
        top: $lte-lg-opener-width -
          (3 * $burger-line-height + $burger-line-gutter * 2);

        .ag-lte-lg-nav-opened & {
          top: $lte-lg-opener-width -
            (3 * $burger-line-height + $burger-line-gutter * 2) +
            $burger-line-gutter;
          transform: rotate(45deg);
        }
      }

      &:nth-child(2) {
        top: $lte-lg-opener-width -
          (3 * $burger-line-height + $burger-line-gutter * 2) +
          $burger-line-gutter;

        .ag-lte-lg-nav-opened & {
          display: none;
        }
      }

      &:last-of-type {
        top: $lte-lg-opener-width -
          (3 * $burger-line-height + $burger-line-gutter * 2) +
          $burger-line-gutter * 2;

        .ag-lte-lg-nav-opened & {
          top: $lte-lg-opener-width -
            (3 * $burger-line-height + $burger-line-gutter * 2) +
            $burger-line-gutter;
          transform: rotate(-45deg);
        }
      }
    }
  }
}
