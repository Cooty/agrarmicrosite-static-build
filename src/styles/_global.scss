@use "sass:map";
@use "variables" as v;

:root {
  --wrapper-gutter: #{v.$wrapper-gutter};
  --text-size: #{v.$content-text-size};
  --vertical-gutter: 40px;
  --small-text-font-size: #{v.$small-text-size};

  @media screen and (min-width: map.get(v.$breakpoints, "lg")) {
    --wrapper-gutter: #{v.$wrapper-gutter-large};
    --text-size: #{v.$content-text-size-large};
    --vertical-gutter: 78px;
    --small-text-font-size: #{v.$small-text-size-large};
  }
}

body {
  font-size: var(--text-size);
  font-family: v.$font-text;
  background: v.$color-bg;
}

body.ag-lte-lg-nav-opened {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

* {
  &,
  &::after,
  &::before {
    box-sizing: border-box;
    position: relative;
  }
}

a {
  color: v.$color-link;
  text-decoration: none;
}

* {
  -webkit-tap-highlight-color: transparent;
}

html {
  -webkit-text-size-adjust: 100%; /* Prevent font scaling in landscape while allowing user zoom */
}

button,
select,
option,
input,
textarea {
  -webkit-appearance: none;
}

select,
option,
input,
textarea {
  font-size: v.$content-text-size; /* prevent iOS from zooming into inputs */
}

strong,
b {
  font-weight: 500;
}

i,
em {
  font-style: italic;
}

*::selection {
  background-color: v.$color-brand;
}

*::-moz-selection {
  background-color: v.$color-brand;
}

a::selection {
  color: v.$color-text;
  background-color: v.$color-brand;
}

a::-moz-selection {
  color: v.$color-text;
  background-color: v.$color-brand;
}

[x-cloak] {
  display: none !important;
}
